function [newVars, varValues] = runScript(testRunnerObj, scriptNameToRun)
% RUNSCRIPT - Run a script with the input name.
%   This function runs a Matlab script and gathers the names of the variables created and their values.
%   It uses longer function input names to avoid clashing with any script variables.
%
%   Input Argments
%       scriptNameToRun - Name of the script to be run
%   Output Arguments
%       newVars - Cell array of characters, each element is the name of a new variable created.
%       varValues - Cell array of containing the values of variables created. Index corresponds with newVars.

% Unpack variables
for i = 1:numel(testRunnerObj.SolnInputs)
    eval(sprintf('%s=testRunnerObj.SolnInputs{i};', testRunnerObj.InputNames{i}))
end
variablesBeforeScript = who; % Get variables before
try
    [~] = evalc(scriptNameToRun); % Run, suppress output
catch exception
    % If the error was generated by the script, rethrow the error. If it was generated by evalc,
    % generate a student based error.
    if any(contains({exception.stack.file}, '+student'))
        rethrow(exception);
    else
        error('HWStudent:scriptErr', exception.message);
    end
end
variablesAfterScript = who; % Get variables after
newVars = setdiff(variablesAfterScript, variablesBeforeScript); % New variables created
newVars(strcmp(newVars, 'variablesBeforeScript')) = []; % Remove storage variable
varValues = cell(1, numel(newVars));
for i = 1:numel(newVars)
    varValues(i) = {eval(newVars{i})};
end
end
